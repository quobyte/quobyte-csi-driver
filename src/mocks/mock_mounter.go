// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/quobyte/quobyte-csi-driver/driver (interfaces: Mounter)
//
// Generated by this command:
//
//	mockgen -package=mocks -destination ../mocks/mock_mounter.go github.com/quobyte/quobyte-csi-driver/driver Mounter
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	unix "golang.org/x/sys/unix"
)

// MockMounter is a mock of Mounter interface.
type MockMounter struct {
	ctrl     *gomock.Controller
	recorder *MockMounterMockRecorder
}

// MockMounterMockRecorder is the mock recorder for MockMounter.
type MockMounterMockRecorder struct {
	mock *MockMounter
}

// NewMockMounter creates a new mock instance.
func NewMockMounter(ctrl *gomock.Controller) *MockMounter {
	mock := &MockMounter{ctrl: ctrl}
	mock.recorder = &MockMounterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMounter) EXPECT() *MockMounterMockRecorder {
	return m.recorder
}

// CreateMountPath mocks base method.
func (m *MockMounter) CreateMountPath(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMountPath", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMountPath indicates an expected call of CreateMountPath.
func (mr *MockMounterMockRecorder) CreateMountPath(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMountPath", reflect.TypeOf((*MockMounter)(nil).CreateMountPath), arg0)
}

// Mount mocks base method.
func (m *MockMounter) Mount(arg0 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Mount", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Mount indicates an expected call of Mount.
func (mr *MockMounterMockRecorder) Mount(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Mount", reflect.TypeOf((*MockMounter)(nil).Mount), arg0)
}

// Statfs mocks base method.
func (m *MockMounter) Statfs(arg0 string) (unix.Statfs_t, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Statfs", arg0)
	ret0, _ := ret[0].(unix.Statfs_t)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Statfs indicates an expected call of Statfs.
func (mr *MockMounterMockRecorder) Statfs(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Statfs", reflect.TypeOf((*MockMounter)(nil).Statfs), arg0)
}

// Unmount mocks base method.
func (m *MockMounter) Unmount(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Unmount", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Unmount indicates an expected call of Unmount.
func (mr *MockMounterMockRecorder) Unmount(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unmount", reflect.TypeOf((*MockMounter)(nil).Unmount), arg0)
}
