apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: generic-secret-storage-class
provisioner: csi.quobyte.com
allowVolumeExpansion: true
parameters:
  quobyteTenant: "csi-test"
  # The access key used for provisioning/expand must be able to create, expand (allocate Quota)
  # delete volume in the above tenant. Meaning, the user who holds the access key mentioned
  # in the secret should be admin/member of the tenant
  # Volume dynamic provision/deletion requires API access keys
  csi.storage.k8s.io/provisioner-secret-name: "quobyte-generic-secret"
  csi.storage.k8s.io/provisioner-secret-namespace: "quobyte"
  # Resize volume requires API access keys
  csi.storage.k8s.io/controller-expand-secret-name: "quobyte-generic-secret"
  csi.storage.k8s.io/controller-expand-secret-namespace: "quobyte"
  # Mounting requires file system/mount secrets
  csi.storage.k8s.io/node-publish-secret-name: "quobyte-generic-secret"
  csi.storage.k8s.io/node-publish-secret-namespace: "quobyte"
  createQuota: "true"
  user: root
  group: root
  accessMode: "777"
reclaimPolicy: Delete